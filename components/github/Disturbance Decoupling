 T = 0.95;
 step = 0.001;
 n = T/step;
 z_0 = H*(expm(A*T) + (expm(A*T)-eye(size(A)))*inv(A)*B*F_part)*x0;
 g_0 =  H*((expm(A*T)-eye(size(A)))*inv(A)*B);
 AA = g_0;
 BB = x0;
 CC  = g_0*(-(eye(size(-U_ker,1))-(U_ker)*gen_inv(U_ker)));
 DD = Vstar*gen_inv(Vstar)*x0;
 G = kron(BB',AA)+kron(DD',CC);
 ZZZ = linsolve(G,vec(-z_0));
 ZZ = reshape(ZZZ,[size(B,2),size(x0)]);
 F_ker = ZZ + (U_ker*gen_inv(U_ker)-eye(size(U_ker,1)))*ZZ*Vstar*gen_inv(Vstar);
 F_des = F_part+F_ker;
 norm(F_des,2)
 u_i = [0];
 for i = 1:(2^(size(g_0,2))-1)
    u_i = [u_i (u_i(end)+1)];
 end
 u_f = int2bit(u_i,size(g_0,2));
 u_max = F_ker*x0;

 u_f(u_f == 0) = -max(abs(u_max));
 u_f(u_f == 1) = max(abs(u_max));
 z_des = z_0 + g_0*u_max;
 z_f = z_0 + g_0*u_f;
 z_f_t = z_f';
 k_f = convhull(z_f_t);
 traj_f =[];
 norm_traj_f=[];
 derivative_norm_traj_f=[];
 traj_total_f =[];
 norm_traj_total_f =[];
 state_f =[];
 for t = 0:step:T
    traj_f =    [traj_f H*(expm(A.*t)*x0 +(expm(A.*t)-eye(size(A)))*inv(A)*B*F_part*x0)+H*((expm(A*t)-eye(size(A)))*inv(A)*B)*u_max];
    norm_traj_f = [norm_traj_f norm(traj_f(:,end))];
    derivative_norm_traj_f = [derivative_norm_traj_f (H*(expm(A.*t)*x0 +(expm(A.*t)-eye(size(A)))*inv(A)*B*F_part*x0)+H*((expm(A*t)-eye(size(A)))*inv(A)*B)*u_max)'*H*expm(A*t)*(A+B*F_des)*x0];
    traj_total_f = [traj_total_f H*(expm(A.*t)*x0 +(expm(A.*t)-eye(size(A)))*inv(A)*B*F_part*x0)+H*((expm(A*t)-eye(size(A)))*inv(A)*B)*u_max+H*(expm(A*t)-eye(size(A)))*inv(A)*E*(1)];
    norm_traj_total_f =[norm_traj_total_f norm(traj_total_f(:,end))]; 
    state_f = [state_f (expm(A.*t)*x0 +(expm(A.*t)-eye(size(A)))*inv(A)*B*F_part*x0)+((expm(A*t)-eye(size(A)))*inv(A)*B)*u_max+(expm(A*t)-eye(size(A)))*inv(A)*E*(1)];
 end
 t = 0:step:T;
%  plot(t,norm_traj_f)
  hold on
%  plot(t,derivative_norm_traj_f)
%  hold on
  plot(t,norm_traj_total_f)
 hold on
 eps = zeros(T/step+1,1);
 eps(eps==0) = epsilon;
  plot(t,eps)
 hold on
 grid on

%% finding zonotope for disturbance
step_sampling_time = 0.1;
A_discrete = expm(A*step_sampling_time);
E_discrete = (expm(A*step_sampling_time)-eye(6))*inv(A)*E;
g_d = [];
for i = 0:1:((T/step_sampling_time)-1)
    g_d = [g_d (A_discrete^i)*E_discrete];
end
n = size(g_d,2);
u = [0];
for i = 1:(2^n-1)
    u = [u (u(end)+1)];
end
u_d = int2bit(u,n);
u_d(u_d == 0) = -1;

z_d = H*g_d*u_d;
x_d = g_d*u_d;
%  plot(z_d(1,:),z_d(2,:))
 hold on
z_d_t = z_d';
k_d = convhull(z_d_t);
% plot(z_d_t(:,1),z_d_t(:,2))
hold on
plot(z_d_t(k_d,1),z_d_t(k_d,2))
hold on
grid on
